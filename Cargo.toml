[package]
name = "zkane"
version = "0.1.0"
edition = "2021"
description = "Privacy pool for alkanes assets using zero-knowledge proofs"
license = "MIT"
repository = "https://github.com/zkane-project/zkane"

[workspace]
members = [
    ".",
    "alkanes/*",
    "crates/zkane-common",
    "crates/zkane-crypto",
    "crates/zkane-core",
    "crates/zkane-frontend",
]

[workspace.dependencies]
# Align with boiler's dependency versions exactly
alkanes = { git = "https://github.com/kungfuflex/alkanes-rs", features = ["test-utils"] }
alkanes-support = { git = "https://github.com/kungfuflex/alkanes-rs" }
alkanes-runtime = { git = "https://github.com/kungfuflex/alkanes-rs" }
alkanes-macros = { git = "https://github.com/kungfuflex/alkanes-rs" }

# Protorune dependencies - matching boiler
protorune = { git = "https://github.com/kungfuflex/alkanes-rs", features = ["test-utils"] }
protorune-support = { git = "https://github.com/kungfuflex/alkanes-rs" }

# Metashrew dependencies - matching boiler
metashrew-core = { git = "https://github.com/sandshrewmetaprotocols/metashrew", features = ["test-utils"] }
metashrew-support = { git = "https://github.com/sandshrewmetaprotocols/metashrew" }

# Ordinals - matching boiler
ordinals = { git = "https://github.com/kungfuflex/alkanes-rs" }

 # Deezel Web
 deezel-web = { path = "/home/ubuntu/deezel/crates/deezel-web" }
 deezel-common = { path = "/home/ubuntu/deezel/crates/deezel-common" }
 
 # Bitcoin and cryptography
 bitcoin = { version = "0.32.4", features = ["rand"] }
sha2 = "0.10"
blake2 = "0.10"
hex = "0.4"
rand = "0.8"

# Arkworks cryptography
ark-ff = "0.4"
ark-ec = "0.4"
ark-std = "0.4"
ark-bn254 = "0.4"
ark-serialize = "0.4"

# WASM and web dependencies
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
web-sys = "0.3"
getrandom = { version = "0.2", features = ["js"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
anyhow = "1.0.94"
thiserror = "1.0"

# Async and utilities
tokio = { version = "1.0", features = ["macros", "rt", "time"] }
once_cell = "1.0"

# Testing dependencies
wasm-bindgen-test = "0.3.49"
hex_lit = "0.1"



# Protobuf - exact version expected by alkanes dependency
protobuf = "3.7.1"

# Math utilities
ruint = "1.0"

[dependencies]
# Core ZKane crates
zkane-common = { path = "crates/zkane-common" }
zkane-crypto = { path = "crates/zkane-crypto" }
zkane-core = { path = "crates/zkane-core" }

# Only alkanes-support for ID types (not full alkanes framework)
alkanes-support = { workspace = true }

# Bitcoin and cryptography
bitcoin = { workspace = true }
sha2 = { workspace = true }
hex = { workspace = true }
getrandom = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
anyhow.workspace = true
thiserror = { workspace = true }

# Async and utilities
tokio = { workspace = true }

# Protobuf
protobuf = { workspace = true }

# Testing dependencies - Boiler pattern with clean test initialization
[dev-dependencies]
wasm-bindgen-test = { workspace = true }
metashrew-core = { workspace = true, features = ["test-utils"] }
metashrew-support = { workspace = true }
protorune = { workspace = true, features = ["test-utils"] }
protorune-support = { workspace = true }
alkanes = { workspace = true, features = ["test-utils"] }
alkanes-runtime = { workspace = true }
ordinals = { workspace = true }
hex_lit = { workspace = true }
ctor = "0.2" # For test environment initialization

# ZKane alkane contracts for testing
zkane-pool = { path = "alkanes/zkane-pool" }
zkane-factory = { path = "alkanes/zkane-factory" }

# Build dependencies
[build-dependencies]
anyhow = "1.0.90"
flate2 = "1.0.34"
hex = "0.4.3"
thiserror = "1.0"

[features]
default = ["std"]
std = []
wasm = []
debug-log = ["alkanes/debug-log"]
# Boiler pattern: Clean testing features
test-native = ["std"]
test-clean = []

# WASM-specific configuration
[lib]
crate-type = ["cdylib", "rlib"]

# Optimization for WASM builds
[profile.release]
opt-level = "s"
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

# WASM-pack configuration
[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Os", "--enable-mutable-globals"]

[package.metadata.wasm-pack.profile.dev]
wasm-opt = false
